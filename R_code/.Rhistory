source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
i
alpha[1]
num.data
num.states
alpha
alpha[1, 1]
cluster = rep(c(0:(K-1)),num_ind)[1:num_ind]
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
data.set
num.ind
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
mean(lambda_trace[90:100])
mean(lambda_trace[100])
density(lambda_mcmc)
KL.divergence(cluster_trace[[100]], cluster, K)
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
cluster
cluster_trace[[100]]
table(cluster_trace, cluster)
table(cluster_trace[[100]], cluster)
table(cluster)
2/12
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
lambda_trace[[100]]
lambda_trace[[99]]
lambda_trace[[98]]
lambda_trace[[97]]
lambda_trace[[96]]
lambda_trace[[95]]
lambda_trace[[94]]
lambda_trace[[93]]
lambda_trace[[92]]
lambda_trace[[91]]
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
eps_mcmc = as.mcmc(eps_trace, thin=50, burnin=0)
summary(eps_mcmc)
KL.divergence(seq_1, seq_2)
seq_1= c(1,1,1,2,2,2,3,3,3)
seq_2 = c(2,2,2,1,1,1,3,3,3)
KL.divergence(seq_1, seq_2, 3)
KL.divergence(seq_1, seq_2, 3)
compare.table
ln.pq.dif
p.matrix
i
p.matrix
ln.pq.dif
1/(1/3)
log(3)
log(4)
log(4)*4
log(3)*3
seq_1= c(1,1,1,2,2,2,3,3,3)
seq_2 = c(2,2,2,1,1,1,3,3,3)
KL.divergence(seq_1, seq_2, 3)
seq_1= c(1,1,1,2,2,2,3,3,3)
seq_2 = c(2,2,2,1,1,1,3,3,3)
KL.divergence(seq_1, seq_2, 3)
seq_1= c(1,1,1,2,2,2,3,3,3)
seq_2 = c(2,2,2,1,1,1,3,3,3)
KL.divergence(seq_1, seq_2, 3)
3*log(3)
4*log(4)
seq_1= c(1,1,1,2,2,2,3,3,3)
seq_2 = c(2,2,1,1,1,1,3,3,3)
KL.divergence(seq_1, seq_2, 3)
print(KL.divergence(cluster_trace[[100]], cluster, K)/K)
print(KL.divergence(cluster_trace[[100]], cluster, K))
print(KL.divergence(cluster_trace[[100]], cluster, K)/K)
seq_1= c(1,1,1,2,2,2,3,3,3)
seq_2 = c(2,2,2,1,1,1,3,3,3)
KL.divergence(seq_1, seq_2, 3)/3
KL.divergence(seq_1, seq_2, 3)/3
seq_1= c(1,1,1,2,2,2,3,3,3)
seq_2 = c(2,2,2,1,1,1,3,3,3)
KL.divergence(seq_1, seq_2, 3)
KL.divergence(cluster_trace[[100]], cluster, K)/(K*log(K))
KL.divergence(seq_1, seq_2, 3)/(3*log(3))
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
eps = 0.1
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
source('~/PycharmProjects/hmm/R_code/compare_mle_to_bw.R', echo=TRUE)
cluster
num_ind = 50
K = 4
cluster = rep(c(0:(K-1)),num_ind)[1:num_ind]
for (i in 1:100){
prop_cluster = propose.cluster.1(cluster, K)
cluster = prop_cluster
}
cluster
